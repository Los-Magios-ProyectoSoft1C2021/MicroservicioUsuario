// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Template.AccessData;

namespace Template.AccessData.Migrations
{
    [DbContext(typeof(UsuarioDbContext))]
    partial class UsuarioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Template.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("RolId");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Descripcion = "Usuario el cual es capaz de reservar hoteles.",
                            Nombre = "Usuario"
                        },
                        new
                        {
                            RolId = 2,
                            Descripcion = "El admin es aquel que puede ver los usuarios que hicieron reservas y modificar info de los hoteles",
                            Nombre = "Admin"
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            UsuarioId = new Guid("517a046d-a1f0-4760-81ff-e4c6685fcedf"),
                            Apellido = "Principal",
                            Contraseña = "Admin12345",
                            Correo = "admin@bookingunaj.com",
                            Dni = 31252875,
                            Imagen = "/img/user.png",
                            Nacionalidad = "Argentina",
                            Nombre = "Admin",
                            NombreUsuario = "admin",
                            RolId = 2,
                            Telefono = "4444-5555"
                        },
                        new
                        {
                            UsuarioId = new Guid("8e58b2e3-fca5-4b65-9c99-32a418fb7336"),
                            Apellido = "Test",
                            Contraseña = "Test12345",
                            Correo = "test@bookingunaj.com",
                            Dni = 1111111,
                            Imagen = "/img/user.png",
                            Nacionalidad = "Argentina",
                            Nombre = "Usuario",
                            NombreUsuario = "test",
                            RolId = 1,
                            Telefono = "4444-5555"
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Template.Domain.Entities.Rol", "RolNavegator")
                        .WithMany("Usuario")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolNavegator");
                });

            modelBuilder.Entity("Template.Domain.Entities.Rol", b =>
                {
                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
